#!/usr/bin/env node
var aws = require('aws-sdk');
var config = require('../build/config');
var logger = require('../build/logger');
var schema = require('../config/schema');

var freeUnits = 10;

var tables = [{
    TableName: schema.contacts.tablename,
    KeySchema: [
        { AttributeName: schema.contacts.hashKey, KeyType: 'HASH'},
        { AttributeName: schema.contacts.rangeKey, KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'contactId', AttributeType: 'S'},
        { AttributeName: 'created', AttributeType: 'N' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}, {
    TableName: 'Disciplines',
    KeySchema: [
        { AttributeName: 'id', KeyType: 'HASH'},
        { AttributeName: 'created', KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'id', AttributeType: 'S'},
        { AttributeName: 'created', AttributeType: 'N' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}, {
    TableName: 'Events',
    KeySchema: [
        { AttributeName: 'id', KeyType: 'HASH'},
        { AttributeName: 'created', KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'id', AttributeType: 'S'},
        { AttributeName: 'created', AttributeType: 'N' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}, {
    TableName: 'Portfolios',
    KeySchema: [
        { AttributeName: 'userid', KeyType: 'HASH'},
        { AttributeName: 'id', KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'userid', AttributeType: 'S'},
        { AttributeName: 'id', AttributeType: 'N' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}, {
    TableName: schema.projects.tablename,
    KeySchema: [
        { AttributeName: 'userid', KeyType: 'HASH'},
        { AttributeName: 'id', KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'userid', AttributeType: 'S'},
        { AttributeName: 'id', AttributeType: 'N' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}, {
    TableName: 'Users',
    KeySchema: [
        { AttributeName: 'username', KeyType: 'HASH'},
        { AttributeName: 'email', KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'username', AttributeType: 'S'},
        { AttributeName: 'email', AttributeType: 'S' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}, {
    TableName: 'UserDetails',
    KeySchema: [
        { AttributeName: 'userid', KeyType: 'HASH'},
        { AttributeName: 'created', KeyType: 'RANGE' }
    ],
    AttributeDefinitions: [
        { AttributeName: 'userid', AttributeType: 'S'},
        { AttributeName: 'created', AttributeType: 'N' }
    ],
    ProvisionedThroughput: {
        ReadCapacityUnits: freeUnits,
        WriteCapacityUnits: freeUnits
    }
}];

aws.config.update({
  region: config.aws.region,
  endpoint: config.aws.endpoint
});

var db = new aws.DynamoDB();

tables.forEach(function(table) {
  db.createTable(table, function(err, data) {
      if (err) {
          logger.error('Unable to create table with error ', err);
      } else {
          logger.info('Created table ', data);
      }
  });
});
